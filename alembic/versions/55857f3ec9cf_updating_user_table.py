"""Updating user table

Revision ID: 55857f3ec9cf
Revises: ae0a749dcaff
Create Date: 2025-04-18 19:52:23.540868

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '55857f3ec9cf'
down_revision: Union[str, None] = 'ae0a749dcaff'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx2_token_pair_timeframe', table_name='t_signal')
    op.drop_index('idx_signal', table_name='t_signal')
    op.drop_table('t_signal')
    op.add_column('t_login', sa.Column('wallet_address', sa.String(), nullable=True))
    op.drop_column('t_login', 'name')
    op.drop_column('t_login', 'is_owner')
    op.drop_column('t_login', 'last_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('t_login', sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('t_login', sa.Column('is_owner', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('t_login', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('t_login', 'wallet_address')
    op.create_table('t_signal',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('signal', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('token', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('pair', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('timeframe', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('gain_threshold', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('stop_loss_threshold', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('creation_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='t_signal_pkey')
    )
    op.create_index('idx_signal', 't_signal', ['signal'], unique=False)
    op.create_index('idx2_token_pair_timeframe', 't_signal', ['token', 'pair', 'timeframe'], unique=False)
    # ### end Alembic commands ###
